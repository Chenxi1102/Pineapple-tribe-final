class(table)
source('~/Desktop/info201/a5-api-report-KeyiZhong/process_data.R', echo=TRUE)
library(ggplot2)
## insert your address here.  It does not to have quite complete.
address <- "Seattle,WA"
stateReps <- propublica(state)
## Make the main computations here.  Keep the functions in a separate file(s)
## and only include the final operations here.
## You have to 'source()' your main R file(s) here:
source('process_data.R')
## You may also have to do some additional processing here
wellDoneDataFrame <- extractData(address)
stateReps <- propublica(state)
representative <- pickRep(stateReps)
voteInfo <- getVote(representative)
## insert your address here.  It does not to have quite complete.
address <- "Seattle,WA"
state <- "WA"
## Test your code with addresses in different states, see if it works
## Note that if you change the address, your code must re-load the data and re-do the tables and figures.
## load API keys
source("keys.R")
## you may also load necessary libraries and set various options here
library(dplyr)
library(ggplot2)
library(lubridate)
knitr::opts_chunk$set(error=TRUE)
# continue compiling on error
## You may want to print the table in a nice way using `knitr::kable()`
## when you have already created it.
knitr::kable(writeTable(wellDoneDataFrame))
knitr::kable(table)
knitr::kable(table)
knitr::kable(table)
source('~/Desktop/info201/a7-collaboration-pineapple-tribe/timingMethod.R', echo=TRUE)
shiny::runApp('~/Desktop/info201/a8-app-KeyiZhong/UFO')
setwd("~/Desktop/info201/a8-building-apps")
runApp('~/Desktop/info201/a8-app-KeyiZhong/UFO')
runApp('~/Desktop/info201/a8-app-KeyiZhong/UFO')
runApp('~/Desktop/info201/a8-app-KeyiZhong/UFO')
setwd("~/Desktop/info201/a8-app-KeyiZhong")
read.csv("data/UFOCoords.csv.bz2")
state.abb
runApp('UFO')
bins
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
size(data)
length(data)
data
data <- read.csv("data/UFOCoords.csv.bz2")
adta
length(data)
data
runApp('UFO')
data %>% arrange(Time)
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('~/Desktop/info201/shinyTest')
install.packages("wordcloud")
library(wordcloud)
runApp('~/Desktop/info201/app')
runApp('~/Desktop/info201/app')
runApp('~/Desktop/info201/app')
repeatable()
runApp('~/Desktop/info201/app')
names()
names(data$Summary)
runApp('~/Desktop/info201/app')
runApp('~/Desktop/info201/app')
terms()
terms
terms <- reactive({
# Change when the "update" button is pressed...
input$update
# ...but not for anything else
isolate({
withProgress({
setProgress(message = "Processing corpus...")
getTermMatrix(data$Summary)
})
})
})
terms
terms()
runApp('UFO')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='keyizhong',
token='2C078A9E815C3C691DD4665E26562499',
secret='aQMFzcUer0JzVr23zdvOhgimSUiWykG/Z3/mvIP9')
rsconnect::deployApp('UFO')
rsconnect::deployApp('UFO/server.R')
rsconnect::deployApp('UFO')
rsconnect::deployApp()
rsconnect::deployApp("UFO")
setwd("UFO")
rsconnect::deployApp()
runApp()
rsconnect::deployApp()
rsconnect::deployApp()
runApp()
runApp()
runApp()
setwd("..")
runApp('UFO')
runApp('UFO')
data <- read.csv("data/UFOCoords.csv.bz2")
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
setwd("data")
runApp('~/Desktop/info201/a8-app-KeyiZhong/UFO')
setwd("..")
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp('UFO')
getwd
getwd()
runApp('UFO')
runApp('UFO')
runApp('UFO')
runApp()
View(data)
runApp()
shiny::runApp()
library(library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server))
library(shiny)
runApp('~/Desktop/info201/pineapple-tribe-final')
install.packages(shinythemes)
install.packages("shinythemes")
runApp('~/Desktop/info201/pineapple-tribe-final')
runApp('~/Desktop/info201/pineapple-tribe-final')
runApp('~/Desktop/info201/pineapple-tribe-final')
runApp('~/Desktop/info201/pineapple-tribe-final')
setwd("../pineapple-tribe-final")
runApp()
both <- read.csv("marrage/both_sexes.csv",stringsAsFactors = FALSE)
men <- read.csv("marriage/men.csv",stringsAsFactors = FALSE)
both <- read.csv("marrage/both_sexes.csv",stringsAsFactors = FALSE)
women <- read.csv("marriage/women.csv",stringsAsFactors = FALSE)
divorce <- read.csv("marriage/divorce.csv",stringsAsFactors = FALSE)
both <- read.csv("marrage/both_sexes.csv",stringsAsFactors = FALSE)
runApp()
both <- read.csv("marrage/both_sexes.csv",stringsAsFactors = FALSE)
both <- read.csv("marriage/both_sexes.csv",stringsAsFactors = FALSE)
View(divorce)
View(both)
View(men)
View(divorce)
View(men)
View(women)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
divorce <- divorce %>% select(year,V4:V12)
divorce <- divorce %>% select(year,4:12)
divorce
divorce <- read.csv("marriage/divorce.csv",stringsAsFactors = FALSE)
divorce <- divorce %>% select(year,13:)
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(divorce,aes(year,value))+geom_line()
test_data <-
data.frame(
var0 = 100 + c(0, cumsum(runif(49, -20, 20))),
var1 = 150 + c(0, cumsum(runif(49, -10, 10))),
date = seq(as.Date("2002-01-01"), by="1 month", length.out=100)
)
test_data
test_data_long <- melt(test_data, id="date")
library(reshape2)
test_data_long <- melt(test_data, id="date")
test_data_long
runApp()
runApp()
divorce <- divorce %>% select(year,4:12)
divorce
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ggplot(divorce,aes(year, value,colour=variable))+geom_line()+ylab("divorce rate")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
men <- men %>% select(year,4:35)
men
runApp()
women <- women %>% select(year,4:27)
men <- read.csv("marriage/men.csv",stringsAsFactors = FALSE)
women <- read.csv("marriage/women.csv",stringsAsFactors = FALSE)
runApp()
runApp()
runApp()
both <- both %>% select(year,all_2534:rich_2534)
both
runApp()
women
women %>% select(year,8:10)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/Desktop/info201/pineapple-tribe-final/marriage.R', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
install.packages("gganimate")
devtools::install_github("dgrtwo/gganimate")
install.packages("devo=tools")
install.packages("devtools")
devtools::install_github("dgrtwo/gganimate")
library(gganimate)
version
gapminder
library(gapminder)
install.packages(gapminder)
install.packages("gapminder")
library(gapminder)
gapminder
ggplot(divorce,aes(year, value,colour=variable))+geom_line()+ylab("divorce rate")
View(divorce)
divorce <- divorce %>% select(year,4:12)
divorce <- divorce %>% select(year,3:7)
colnames(divorce)=c("year","High school","Some college","Bachelor's degree or more","Bachelor's degree, no graduate degre","Graduate degree")
divorce <- melt(divorce,id = "year")
ggplot(divorce,aes(year, value,colour=variable))+geom_line()+ylab("divorce rate")
g <- ggplot(divorce,aes(year, value,colour=variable))+geom_line()+ylab("divorce rate")
gganimate(g)
library(gganimate)
gganimate(g)
gganimate
ggplot(divorce,aes(year, value,colour=variable))+geom_line()+ylab("divorce rate")
ggplot(divorce,aes(year, value,colour=variable))+geom_line()+ylab("divorce rate")+transition_manual(year)
ggplot(divorce,aes(year, value,colour=variable))+geom_line()+ylab("divorce rate")+transition_filter(year)
ggplot(divorce,aes(year, value,colour=variable))+geom_line()+ylab("divorce rate")+transition_filter(year,value)
ggplot(divorce,aes(year, value,colour=variable))+geom_line()+ylab("divorce rate")+transition_time(year)
install.packages("installr")
ggplot(divorce,aes(year, value,colour=variable,frame=year))+geom_line()+ylab("divorce rate")+transition_time(year)
ggplot(divorce,aes(year, value,colour=variable,frame=year))+geom_line()+ylab("divorce rate")+transition_manual(year)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, fig.show = "animate")
ggplot(divorce,aes(year, value,colour=variable,frame=year))+geom_line()+ylab("divorce rate")+transition_manual(year)
ggplot(divorce,aes(year, value,colour=variable,frame=year))+geom_line()+ylab("divorce rate")+transition_time(year)
as_tibble(divorce)
ggplot(divorce,aes(year, value,colour=variable,frame=year))+geom_line()+ylab("divorce rate")+transition_time(year)
ggplot(divorce,aes(year, value,colour=variable,))+geom_line()+ylab("divorce rate")+transition_time(year)
ggplot(divorce,aes(year, value,colour=variable))+geom_line()+ylab("divorce rate")+transition_time(year)
devtools::install_github("thomasp85/transformr")
devtools::install_github("thomasp85/transformr")
install.packages("transformr")
devtools::install_github("thomasp85/transformr")
View(both)
source('~/.active-rstudio-document', echo=TRUE)
both
both <- select(year,3:7)
both <- select(year,3:7)
both <- select("year",3:7)
both <- select(both,year,3:7)
both
both <- select(both,year,3:9)
both
both <- read.csv("marriage/both_sexes.csv",stringsAsFactors = FALSE)
both <- select(both,year,3:9)
both
source('~/.active-rstudio-document', echo=TRUE)
both
reshape2::melt(both,id="year")
source('~/.active-rstudio-document', echo=TRUE)
temp.gapminder = gapminder
select.country = c(as.character(head(temp.gapminder$country[temp.gapminder$year==2007][order(temp.gapminder$pop[temp.gapminder$year==2007],decreasing = TRUE)],8)))
temp.gapminder = temp.gapminder[temp.gapminder$country %in% select.country,]
temp.gapminder$country = factor(temp.gapminder$country, order = TRUE, levels = select.country)
##制作Gif
p = ggplot(temp.gapminder, aes(country, lifeExp, fill=country)) +
geom_bar(stat= 'identity', position = 'dodge',show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'country', y = 'life expectancy') +
transition_time(year) +
ease_aes('linear')
P
anim_save("C:/Users/Ricardo/Desktop/gganimate/")
p
temp.gapminder
source('~/.active-rstudio-document', echo=TRUE)
both <- read.csv("marriage/both_sexes.csv",stringsAsFactors = FALSE)
both <- select(both,year,5:11)
both <- reshape2::melt(both,id="year")
both <- as_tibble(both)
both
ggplot(both, aes(variable,1 - value,fill=variable)) +
geom_bar(stat= 'identity', position = 'dodge',show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'education', y = 'marriage rate') +
transition_time(year) +
ease_aes('linear')
source('~/.active-rstudio-document', echo=TRUE)
warnings()
both
ggplot(both, aes(variable,1 - value,fill=variable)) +
geom_bar(stat= 'identity', position = 'dodge',show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'education', y = 'marriage rate') +
transition_time(year) +
ease_aes('linear')
both <- as_tibble(both)
ggplot(both, aes(variable,1 - value,fill=variable)) +
geom_bar(stat= 'identity', position = 'dodge',show.legend = FALSE)
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'education', y = 'marriage rate') +
transition_time(year) +
ease_aes('linear')
both <- as_tibble(both)
ggplot(both, aes(variable,1 - value,fill=variable)) +
geom_bar(stat= 'identity', position = 'dodge',show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}', x = 'education', y = 'marriage rate') +
transition_time(year) +
ease_aes('linear')
source('~/.active-rstudio-document', echo=TRUE)
source('~/Desktop/info201/pineapple-tribe-final/animated.R', echo=TRUE)
runApp()
runApp()
source('~/Desktop/info201/pineapple-tribe-final/animated.R', echo=TRUE)
runApp()
source('~/Desktop/info201/pineapple-tribe-final/animated.R', echo=TRUE)
runApp()
ggplot(both, aes(variable,1 - value,fill=variable)) +
geom_bar(stat= 'identity', position = 'dodge',show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
labs(title = 'Year: {frame_time}', x = 'Education', y = 'Marriage rate') +
transition_time(year) +
ease_aes('linear')
anim_save()
ggplot(both, aes(variable,1 - value,fill=variable)) +
geom_bar(stat= 'identity', position = 'dodge',show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
labs(title = 'Year: {frame_time}', x = 'Education', y = 'Marriage rate') +
transition_time(year) +
ease_aes('linear')
anim_save(paste0(input$select_1,"_",age,".gif"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
anim_save("keyi.gif")
runApp()
runApp()
runApp()
install.packages("giphyr")
runApp()
runApp('test')
install.packages("animation")
runApp('test')
gif_file("keyi.gif")
gifski_renderer("keyi.gif")
gifski_renderer()
read.gif
install.packages("GIF")
install.packages("magick")
library(magick)
install.packages("caTools")
install.packages("caTools")
library(magick)
library(caTools)
gif <- gif_file("keyi.gif")
runApp()
gif <- read.gif("keyi.gif")
gif
runApp()
data <- as_tibble(data)
ggplot(data, aes(variable,1 - value,fill=variable)) +
geom_bar(stat= 'identity', position = 'dodge',show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
labs(title = 'Year: {frame_time}', x = 'Education', y = 'Marriage rate') +
transition_time(year) +
ease_aes('linear')
both <- as_tibble(both)
ggplot(both, aes(variable,1 - value,fill=variable)) +
geom_bar(stat= 'identity', position = 'dodge',show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
labs(title = 'Year: {frame_time}', x = 'Education', y = 'Marriage rate') +
transition_time(year) +
ease_aes('linear')
runApp()
animation::saveGIF(gif)
runApp()
runApp()
runApp()
gif()
shiny::runApp()
runApp()
source('~/Desktop/info201/pineapple-tribe-final/animated.R', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
p <- ggplot(data, aes(variable,1 - value,fill=variable)) +
geom_bar(stat= 'identity', position = 'dodge',show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
labs(title = 'Year: {frame_time}', x = input$filter2, y = 'Marriage rate') +
transition_time(year) +
ease_aes('linear')
both <- read.csv("marriage/both_sexes.csv",stringsAsFactors = FALSE)
data <- data %>% select(year,all_2534:rich_2534)
data <- data %>% select(year,3:7)
colnames(data) <- c("year","High school graduate or less","Some college","Bachelor's degree or more","Bachelor's degree, no graduate degre","Graduate degree")
data <- melt(data,id="year")
data <- as_tibble(data)
library(shiny)
library(reshape2)
library(dplyr)
library(ggplot2)
library(gganimate)
data <- data %>% select(year,3:7)
colnames(data) <- c("year","High school graduate or less","Some college","Bachelor's degree or more","Bachelor's degree, no graduate degre","Graduate degree")
both <- read.csv("marriage/both_sexes.csv",stringsAsFactors = FALSE)
data <- data %>% select(year,all_2534:rich_2534)
View(both)
both <- both %>% select(year,all_2534:rich_2534)
both<- both %>% select(year,3:7)
colnames(both) <- c("year","High school graduate or less","Some college","Bachelor's degree or more","Bachelor's degree, no graduate degre","Graduate degree")
both
data <- both
data <- melt(data,id="year")
data <- as_tibble(data)
p <- ggplot(data, aes(variable,1 - value,fill=variable)) +
geom_bar(stat= 'identity', position = 'dodge',show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
labs(title = 'Year: {frame_time}', x = input$filter2, y = 'Marriage rate') +
transition_time(year) +
ease_aes('linear')
p <- ggplot(data, aes(variable,1 - value,fill=variable)) +
geom_bar(stat= 'identity', position = 'dodge',show.legend = FALSE) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.5, vjust = 0.5)) +
labs(title = 'Year: {frame_time}', x = "input$filter2", y = 'Marriage rate') +
transition_time(year) +
ease_aes('linear')
p
save_animation("keyi.gif")
anim_save("keyi.gif")
source('~/Desktop/info201/pineapple-tribe-final/animated.R', echo=TRUE)
runApp()
source('~/Desktop/info201/pineapple-tribe-final/animated.R', echo=TRUE)
runApp()
source('~/Desktop/info201/pineapple-tribe-final/animated.R', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
